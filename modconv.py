from pyassimp import *
import datetime
import sys

print("modconv - mountainflaw")
if (len(sys.argv) > 3):
    print("Usage: python3 modconv.py PATHTOMODEL SCALE")
    exit()
fileName = str(sys.argv[1])
scale = int(sys.argv[2])

# Known formats will have labeled output depending on filename. Yes this is a very stupid way of doing it.

if fileName.endswith('.blend'):
    fileNameOut = fileName[:-5]
if fileName.endswith('.fbx') | fileName.endswith('.dae') | fileName.endswith('.obj'):
    fileNameOut = fileName[:-4]
else:
    fileNameOut = "output"
print(fileNameOut)
flag = 0
vertU = "0"
vertV = "0"
loopCount = 0
scene = load(fileName)
mesh = scene.meshes[0]
vertexCount = len(mesh.vertices)
vertexheader = open(fileNameOut + ".s", "w")
# Check for vertex colors.
print("Checking for vertex colors...")
try:
    assert len(mesh.colors[0])
    usingvrgba = True
    print("There are vertex colors.")
except:
    print("There are no vertex colors.")
    usingvrgba = False

# GENERATE THE VERTICES IDIOT
vertexheader.write("# Vertices generated by modconv\n")
vertexheader.write(fileNameOut + "_vertex:\n")
while (loopCount != vertexCount):
    print("Generating vertex " + str(loopCount))
    vertX = str(int(mesh.vertices[loopCount][0]) * scale)
    vertY = str(int(mesh.vertices[loopCount][1]) * scale)
    vertZ = str(int(mesh.vertices[loopCount][2]) * scale)
    # Vertex RGBA
    if(usingvrgba == True):
        rgbaR = hex(int(mesh.colors[0][loopCount][0] * 255))
        rgbaG = hex(int(mesh.colors[0][loopCount][1] * 255))
        rgbaB = hex(int(mesh.colors[0][loopCount][2] * 255))
        rgbaA = hex(int(mesh.colors[0][loopCount][3] * 255))
    else:
        rgbaR = "0x00"
        rgbaG = "0x00"
        rgbaB = "0x00"
        rgbaA = "0x00"
    vertexheader.write("vertex     " + vertX + ",     " + vertY + ",     " + vertZ + ",     " + vertU +",     " + vertV + ",  " + rgbaR + "," + rgbaG + "," + rgbaB + "," + rgbaA + "\n")
    loopCount += 1
loopCount = 0
print("OK.")
print("Generating DLs.")
vertexheader.write("\n# Display list generated by modconv\n")
vertexheader.write(fileNameOut + "_dl:\n")
while (loopCount != vertexCount):
    vertexheader.write("gsSP1Triangle " + str(loopCount) + ", ")
    loopCount += 1
    vertexheader.write(str(loopCount) + ", ")
    loopCount += 1
    vertexheader.write(str(loopCount) + ", 0x00\n")
    loopCount += 1
vertexheader.write("gsSPEndDisplayList")
print("Finished generating DL.")


